!function(){"use strict";const e=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}_handleResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}initialize(){return Promise.all([this.getUser(),this.getInitialCards()])}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then((e=>this._handleResponse(e)))}getUser(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then((e=>this._handleResponse(e)))}setUserInfo(e){let{name:t,about:s}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:s})}).then((e=>this._handleResponse(e)))}addCard(e){let{name:t,link:s}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s})}).then((e=>this._handleResponse(e)))}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then((e=>this._handleResponse(e)))}toggleLike(e,t){return fetch(`${this._baseUrl}/cards/likes/${e}`,{method:t?"DELETE":"PUT",headers:this._headers}).then((e=>this._handleResponse(e)))}updateAccountPic(e){let{avatar:t}=e;return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then((e=>this._handleResponse(e)))}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"099989f7-9742-46ef-99f8-aa8e6872a6c3","Content-Type":"application/json"}});class t{constructor(e){this._popup=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this),this._closePopupOnRemoteClick=this._closePopupOnRemoteClick.bind(this)}open(){this._popup.classList.add("popup_open"),this._popup.addEventListener("mousedown",this._closePopupOnRemoteClick),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("popup_open"),document.removeEventListener("keydown",this._handleEscClose),this._popup.removeEventListener("mousedown",this._closePopupOnRemoteClick)}_closePopupOnRemoteClick(e){e.target.classList.contains("popup__overlay")&&this.close()}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popup.querySelector(".popup__close-btn").addEventListener("click",(()=>this.close()))}}class s extends t{constructor(e,t,s){let{handleFormSubmit:n}=t,{loadingButtonText:r="Saving..."}=s;super(e),this._form=this._popup.querySelector(".popup__form"),this._handleFormSubmit=n,this._inputList=this._form.querySelectorAll(".popup__form-input"),this._saveButton=this._form.querySelector(".popup__button"),this._saveButtonText=this._saveButton.textContent,this._loadingButtonText=r}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}_getInputValues(){return this._objData={},this._inputList.forEach((e=>{this._objData[e.name]=e.value})),this._objData}setInputValues(e){this._objInput={},thisrenderSaving._inputList.forEach((t=>{this._objInput[t.name]=e[t.value]}))}close(){super.close(),this._form.reset()}open(){super.open()}renderSaving(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this._loadingButtonText;this._saveButton.textContent=e?t:this._saveButtonText}}var n=class{constructor(e,t){this._form=t,this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._saveButtonSelector=e.saveButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._inputList=[...this._form.querySelectorAll(this._inputSelector)],this._buttonElement=this._form.querySelector(this._saveButtonSelector)}_showInputError(e,t){const s=this._form.querySelector(`.${e.id}-error`);e.classList.add(this._inputErrorClass),s.textContent=t,s.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`.${e.id}-error`);e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}_setEventListeners(){this._toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}_toggleButtonState(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.setAttribute("disabled",!0)):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.removeAttribute("disabled"))}enableValidation(){this._form.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}resetValidation(){this._toggleButtonState(),this._inputList.forEach((e=>{this._hideInputError(e)}))}};const r=document.querySelector(".account__edit-button"),o=(document.querySelector(".account__name"),document.querySelector(".account__description"),document.querySelector(".popup__account-name")),i=document.querySelector(".popup__account-description"),a=document.querySelector(".popup__edit-form"),l=document.querySelector(".account__add-button"),c=(document.querySelector(".popup__place-name"),document.querySelector(".js-input-type-place-url"),document.querySelector(".popup__place-form")),u=document.querySelector(".account__image-edit-btn"),h=document.querySelector(".popup__edit-account-pic-form"),_=document.querySelector(".cards__list"),d={formSelector:".popup__form",inputSelector:".popup__form-input",saveButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input-type-error",errorClass:"popup__error_visible"};let p;const m=new class extends t{constructor(e,t){let{loadingButtonText:s="Saving..."}=t;super(e),this._form=this._popup.querySelector(".popup__form"),this._saveButton=this._form.querySelector(".popup__button"),this._saveButtonText=this._saveButton.textContent,this._loadingButtonText=s}open(e){this._handleSubmit=e,super.open()}close(){super.close()}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmit()}))}renderSaving(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this._loadingButtonText;this._saveButton.textContent=e?t:this._saveButtonText}}("#delete-popup",{loadingButtonText:"Deleting..."});m.setEventListeners();const v=e=>{const t=B(e);S.addItem(t)},S=new class{constructor(e,t){let{items:s,renderer:n}=e;this._renderedItems=s,this._renderer=n,this._container=t}addItem(e){this._container.prepend(e)}renderItems(e){e.forEach(this._renderer)}}({renderer:v},_),g=new class extends t{constructor(e){super(e),this._cardImage=document.querySelector(".popup__image-preview")}open(e,t){const s=this._cardImage;s.src=t,s.alt=e,document.querySelector(".popup__preview-name").textContent=e,super.open()}}("#view__image"),E=new s("#add__place",{handleFormSubmit:e=>{x(e)}},{loadingButtonText:"Saving..."});l.addEventListener("click",(()=>{E.open(),C.resetValidation()}));const b=new class{constructor(e){let{nameSelector:t,jobSelector:s,accountPicSelector:n}=e;this._name=document.querySelector(t),this._about=document.querySelector(s),this._accountPic=document.querySelector(n)}getUserInfo(){return{name:this._name.textContent,about:this._about.textContent}}setUserInfo(e){let{name:t,about:s}=e;this._name.textContent=t,this._about.textContent=s}setUserAvatar(e){let{avatar:t}=e;this._accountPic.src=t}}({nameSelector:".account__name",jobSelector:".account__description",accountPicSelector:".account__image"}),f=new s("#account__edit",{handleFormSubmit:e=>{q(e)}},{loadingButtonText:"Saving..."});r.addEventListener("click",(()=>{const{name:e,about:t}=b.getUserInfo();o.value=e,i.value=t,f.open(),y.resetValidation()}));const L=new s("#edit-account-pic-popup",{handleFormSubmit:e=>{w(e)}},{loadingButtonText:"Updating image..."});L.setEventListeners(),u.addEventListener("click",(()=>{L.open(),k.resetValidation()}));const y=new n(d,a),C=new n(d,c),k=new n(d,h);f.setEventListeners(),E.setEventListeners(),g.setEventListeners();const B=e=>{const t=new class{constructor(e,t,s,n,r,o){this.handleCardClick=s,this._handleDeleteButton=n,this._cardSelector=t,this._handleLikeButton=r,this._name=e.name,this._link=e.link,this._likes=e.likes,this._ownerId=e.owner._id,this._id=e._id,this._userId=o}updateLikes(e){this._likes=e,this._renderLikes()}isLiked(){return this._likes.some((e=>e._id===this._userId))}_renderLikes(){this._likesTotal.textContent=this._likes.length,this.isLiked()?this._cardElement.querySelector(".card__place-favorite").classList.add("card__place-favorite_active"):this._cardElement.querySelector(".card__place-favorite").classList.remove("card__place-favorite_active")}getCardId(){return this._id}_setEventListeners(){this._cardElement.querySelector(".card__place-favorite").addEventListener("click",this._handleLikeButton),this._trashButton.addEventListener("click",(()=>{this._handleDeleteButton(this._cardElement)})),this._cardElement.querySelector(".card__image").addEventListener("click",(()=>{this.handleCardClick({link:this._link,name:this._name})}))}removeCard(){this._cardElement.remove(),this._cardElement=null}_getTemplate(){return document.querySelector(this._cardSelector).content.firstElementChild.cloneNode(!0)}getView(){this._cardElement=this._getTemplate(),this._cardElement.querySelector(".card__place-name").textContent=this._name;const e=this._cardElement.querySelector(".card__image");return this._likesTotal=this._cardElement.querySelector(".card__place-num"),this._trashButton=this._cardElement.querySelector(".card__trash"),this._setEventListeners(),this._renderLikes(),e.src=this._link,e.alt=this._name,this._ownerId!==this._userId&&this._trashButton.remove(),this._cardElement}}(e,"#card-template",(()=>{var t;t=e,g.open(t.name,t.link)}),(()=>{m.open((()=>{T(t)}))}),(()=>{I(t)}),p);return t.getView()},I=t=>{e.toggleLike(t.getCardId(),t.isLiked()).then((e=>{t.updateLikes(e.likes)})).catch((e=>{console.log(e)}))},q=t=>{f.renderSaving(!0),e.setUserInfo(t).then((e=>{b.setUserInfo({name:e.name,about:e.about}),f.close()})).catch((e=>{console.log(e)})).finally((()=>{f.renderSaving(!1)}))},x=t=>{E.renderSaving(!0),e.addCard(t).then((e=>{v(e),E.close()})).catch((e=>{console.log(e)})).finally((()=>{E.renderSaving(!1)}))},w=t=>{L.renderSaving(!0),e.updateAccountPic(t).then((e=>{b.setUserAvatar({avatar:e.avatar}),L.close()})).catch((e=>{console.log(e)})).finally((()=>{L.renderSaving(!1)}))},T=t=>{m.renderSaving(!0),e.deleteCard(t.getCardId()).then((()=>{t.removeCard(),m.close()})).catch((e=>{console.log(e)})).finally((()=>{m.renderSaving(!1)}))};e.initialize().then((e=>{let[t,s]=e;p=t._id,S.renderItems(s),b.setUserInfo({name:t.name,about:t.about}),b.setUserAvatar({avatar:t.avatar})})).catch((e=>{console.log(e)})),C.enableValidation(),y.enableValidation(),k.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,