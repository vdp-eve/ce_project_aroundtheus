!function(){"use strict";var e={d:function(t,n){for(var s in n)e.o(n,s)&&!e.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:n[s]})},o:function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r:function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{F3:function(){return u},oy:function(){return h},Z6:function(){return l},gB:function(){return m},Jb:function(){return a},wP:function(){return i},iy:function(){return c},LC:function(){return f},yq:function(){return d},Y9:function(){return _},fk:function(){return p},P0:function(){return v},aQ:function(){return S},E3:function(){return g}});const n=new class{constructor(e){let{baseUrl:t,headers:n}=e;this._baseUrl=t,this._headers=n}_handleResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}initialize(){return Promise.all([this.getUser(),this.getInitialCards()])}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then((e=>this._handleResponse(e)))}getUser(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then((e=>this._handleResponse(e)))}setUserInfo(e){let{name:t,about:n}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:n})}).then((e=>this._handleResponse(e)))}addCard(e){let{name:t,link:n}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:n})}).then((e=>this._handleResponse(e)))}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then((e=>this._handleResponse(e)))}toggleLike(e,t){return fetch(`${this._baseUrl}/cards/likes/${e}`,{method:t?"DELETE":"PUT",headers:this._headers}).then((e=>this._handleResponse(e)))}updateaccountPic(e){let{avatar:t}=e;return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then((e=>this._handleResponse(e)))}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"099989f7-9742-46ef-99f8-aa8e6872a6c3","Content-Type":"application/json"}});class s{constructor(e){this._popup=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this),this._closePopupOnRemoteClick=this._closePopupOnRemoteClick.bind(this)}open(){this._popup.classList.add("popup_open"),this._popup.addEventListener("mousedown",this._closePopupOnRemoteClick),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("popup_open"),document.removeEventListener("keydown",this._handleEscClose),this._popup.removeEventListener("mousedown",this._closePopupOnRemoteClick)}_closePopupOnRemoteClick(e){e.target.classList.contains("popup__overlay")&&this.close()}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popup.querySelector(".popup__close-btn").addEventListener("click",(()=>this.close()))}}class r extends s{constructor(e,t,n){let{handleFormSubmit:s}=t,{loadingButtonText:r="Saving..."}=n;super(e),this._form=this._popup.querySelector(".popup__form"),this._handleFormSubmit=s,this._inputList=this._form.querySelectorAll(".popup__form-input"),this._saveButton=this._form.querySelector(".popup__button"),this._saveButtonText=this._saveButton.textContent,this._loadingButtonText=r}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}_getInputValues(){return this._objData={},this._inputList.forEach((e=>{this._objData[e.name]=e.value})),this._objData}setInputValues(e){this._objInput={},thisrenderSaving._inputList.forEach((t=>{this._objInput[t.name]=e[t.value]}))}close(){super.close(),this._form.reset()}open(){super.open()}renderSaving(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this._loadingButtonText;this._saveButton.textContent=e?t:this._saveButtonText}}var o=class{constructor(e,t){this._form=t,this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._saveButtonSelector=e.saveButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._inputList=[...this._form.querySelectorAll(this._inputSelector)],this._buttonElement=this._form.querySelector(this._saveButtonSelector)}_showInputError(e,t){const n=this._form.querySelector(`.${e.id}-error`);e.classList.add(this._inputErrorClass),n.textContent=t,n.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`.${e.id}-error`);e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}_setEventListeners(){this._toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}_toggleButtonState(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1)}enableValidation(){this._form.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}resetValidation(){this._toggleButtonState(),this._inputList.forEach((e=>{this._hideInputError(e)}))}};const i=document.querySelector(".account__edit-button"),a=(document.querySelector(".account__name"),document.querySelector(".account__description"),"#add__place"),c="#account__edit",u=".account__name",l=".account__description",_=document.querySelector(".popup__account-name"),d=document.querySelector(".popup__account-description"),h=".account__image",p=document.querySelector(".popup__edit-form"),m=document.querySelector(".account__add-button"),v=(document.querySelector(".popup__place-name"),document.querySelector(".js-input-type-place-url"),document.querySelector(".popup__place-form")),S=(document.querySelector(".account__image-edit-btn"),document.querySelector(".popup__edit-account-pic-form")),f=document.querySelector(".cards__list"),g={formSelector:".popup__form",inputSelector:".popup__form-input",saveButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input-type-error",errorClass:"popup__error_visible"};let E;const b=new class extends s{constructor(e,t){let{loadingButtonText:n="Saving..."}=t;super(e),this._form=this._popup.querySelector(".popup__form"),this._saveButton=this._form.querySelector(".popup__button"),this._saveButtonText=this._saveButton.textContent,this._loadingButtonText=n}open(e){this._handleSubmit=e,super.open()}close(){super.close()}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmit()}))}renderSaving(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this._loadingButtonText;this._saveButton.textContent=e?t:this._saveButtonText}}("#delete-popup",{loadingButtonText:"Deleting..."});b.setEventListeners();const y=e=>{const t=P(e);L.addItem(t)},L=new class{constructor(e,t){let{items:n,renderer:s}=e;this._renderedItems=n,this._renderer=s,this._container=t}addItem(e){this._container.prepend(e)}renderItems(e){e.forEach(this._renderer)}}({renderer:y},f),C=new class extends s{constructor(e){super(e),this._cardImage=document.querySelector(".popup__image-preview")}open(e,t){const n=this._cardImage;n.src=t,n.alt=e,document.querySelector(".popup__preview-name").textContent=e,super.open()}}("#view__image"),k=new r(a,{handleFormSubmit:e=>{j(e)}},{loadingButtonText:"Saving..."});m.addEventListener("click",(()=>{k.open(),w.resetValidation()}));const B=new class{constructor(e){let{nameSelector:t,jobSelector:n,accountPicSelector:s}=e;this._name=document.querySelector(t),this._about=document.querySelector(n),this._accountPic=document.querySelector(s)}getUserInfo(){return{name:this._name.textContent,about:this._about.textContent}}setUserInfo(e){let{name:t,about:n}=e;this._name.textContent=t,this._about.textContent=n}setUserAvatar(e){let{avatar:t}=e;this._accountPic.src=t}}({nameSelector:u,jobSelector:l,accountPicSelector:h}),q=new r(c,{handleFormSubmit:e=>{editaccount(e)}},{loadingButtonText:"Saving..."});i.addEventListener("click",(()=>{const{name:e,about:t}=B.getUserInfo();_.value=e,d.value=t,q.open(),x.resetValidation()}));const I=new r("#edit-account-pic-popup",{handleFormSubmit:e=>{changeaccountImage(e)}},{loadingButtonText:"Updating image..."});I.setEventListeners(),t.editaccountPicButton.addEventListener("click",(()=>{I.open(),T.resetValidation()}));const x=new o(g,p),w=new o(g,v),T=new o(g,S);q.setEventListeners(),k.setEventListeners(),C.setEventListeners();const P=e=>{const t=new class{constructor(e,t,n,s,r,o){this.handleCardClick=n,this._handleDeleteButton=s,this._cardSelector=t,this._handleLikeButton=r,this._name=e.name,this._link=e.link,this._likes=e.likes,this._ownerId=e.owner._id,this._id=e._id,this._userId=o}updateLikes(e){this._likes=e,this._renderLikes()}isLiked(){return this._likes.some((e=>e._id===this._userId))}_renderLikes(){this._likesTotal.textContent=this._likes.length,this.isLiked()?this._cardElement.querySelector(".card__place-favorite").classList.add("card__place-favorite_active"):this._cardElement.querySelector(".card__place-favorite").classList.remove("card__place-favorite_active")}getCardId(){return this._id}_setEventListeners(){this._cardElement.querySelector(".card__place-favorite").addEventListener("click",this._handleLikeButton),this._trashButton.addEventListener("click",(()=>{this._handleDeleteButton(this._cardElement)})),this._cardElement.querySelector(".card__image").addEventListener("click",(()=>{this.handleCardClick({link:this._link,name:this._name})}))}removeCard(){return this._cardElement.remove(),this._cardElement=null}_getTemplate(){return document.querySelector(this._cardSelector).content.firstElementChild.cloneNode(!0)}getView(){this._cardElement=this._getTemplate(),this._cardElement.querySelector(".card__place-name").textContent=this._name;const e=this._cardElement.querySelector(".card__image");return this._likesTotal=this._cardElement.querySelector(".card__place-num"),this._trashButton=this._cardElement.querySelector(".card__trash"),this._setEventListeners(),this._renderLikes(),e.src=this._link,e.alt=this._name,this._ownerId!==this._userId&&this._trashButton.remove(),this._cardElement}}(e,"#card-template",(()=>{var t;t=e,C.open(t.name,t.link)}),(()=>{b.open((()=>{V(t)}))}),(()=>{U(t)}),E);return t.getView()},U=e=>{n.toggleLike(e.getCardId(),e.isLiked()).then((t=>{e.updateLikes(t.likes)})).catch((e=>{console.log(e)}))},j=e=>{k.renderSaving(!0),n.addCard(e).then((e=>{y(e),k.close()})).catch((e=>{console.log(e)})).finally((()=>{k.renderSaving(!1)}))},V=e=>{b.renderSaving(!0),n.deleteCard(e.getCardId()).then((()=>{e.removeCard(),b.close()})).catch((e=>{console.log(e)})).finally((()=>{b.renderSaving(!1)}))};n.initialize().then((e=>{let[t,n]=e;E=t._id,L.renderItems(n),B.setUserInfo({name:t.name,about:t.about}),B.setUserAvatar({avatar:t.avatar})})).catch((e=>{console.log(e)})),w.enableValidation(),x.enableValidation(),T.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,